CREATE TABLE memberTBL (
	memberID CHAR(8) PRIMARY KEY NOT NULL,
	memberName CHAR(5) NOT NULL,
	memberAddress CHAR(20)
);

DROP TABLE productTBL;

CREATE TABLE productTBL (
	productName CHAR(4) PRIMARY KEY,
	cost INT NOT NULL,
	make_Date DATE,
	company CHAR(5),
	amount INT NULL
);

INSERT INTO membertbl 
(  memberid, membername, memberaddress )
VALUES 
( 'Dang', '당탕이', '경기 부천시 중동' );

INSERT INTO membertbl 
(memberid, membername, memberaddress)
VALUES
( 'Han', '한주연', '인천 남구 주안동' ),
( 'Jee', '지운이', '서울 은평구 증산동' ),
( 'Sang', '상길이', '경기 성남구 분당구' );

INSERT INTO producttbl
( PRODUCTNAME, COST, MAKE_DATE, COMPANY, AMOUNT )
VALUES
( '컴퓨터', 10, 20170101, '삼성', 17 ),
( '세탁기', 20, 20180901, 'LG', 3 ),
( '냉장고', 5, 20190201, '대우', 22 );

SELECT * FROM producttbl;

SELECT COMPANY FROM PRODUCTTBL;

SELECT COST, AMOUNT, COMPANY FROM producttbl;

SELECT * FROM producttbl WHERE COMPANY='LG';

SELECT PRODUCTNAME FROM PRODUCTTBL WHERE COMPANY='삼성';

SELECT * FROM membertbl WHERE MEMBERNAME='지운이';

SELECT * FROM producttbl WHERE COST >= 10;
 
SELECT * FROM producttbl WHERE COST <= 10;

SELECT * FROM producttbl WHERE COST <= 10 AND COMPANY = 'LG';

SELECT * FROM producttbl WHERE COST <= 10 AND COMPANY = '대우';

SELECT * FROM producttbl WHERE COST <= 10 OR COMPANY = 'LG';

DROP TABLE t_exam;

CREATE TABLE INDEXTBL (
	FIRST_NAME VARCHAR(14),
	LAST_NAME VARCHAR(16),
	HIRE_DATE DATE
);

SELECT FIRST_NAME, LAST_NAME, HIRE_DATE
FROM EMPLOYEES.EMPLOYEES
LIMIT 1000;

INSERT INTO indextbl
(FIRST_NAME, LAST_NAME, HIRE_DATE)
SELECT FIRST_NAME, LAST_NAME, HIRE_DATE
FROM EMPLOYEES.EMPLOYEES
LIMIT 1000;

SELECT * FROM indextbl;


EXPLAIN SELECT * FROM indextbl
WHERE FIRST_NAME = 'MARY';

CREATE INDEX IDX_INDEXTBL_FIRSTNAME
ON indextbl(FIRST_NAME);

EXPLAIN SELECT * FROM indextbl
WHERE FIRST_NAME = 'MARY';

USE EMPLOYEES;

SELECT * FROM TITLES;

SHOW DATABASES;
USE EMPLOYEES;
SHOW TABLES;
SHOW TABLE STATUS;

SELECT EMP_NO AS 'ENO'
FROM TITLES;

SELECT EMP_NO, EMP_NO AS 'ENO'
FROM TITLES;

SELECT T.EMP_NO, EMP_NO AS 'ENO'
FROM TITLES T;

SELECT * 
FROM titles
WHERE EMP_NO >= 10600;

SELECT * 
FROM titles
WHERE EMP_NO >= 10600 AND TITLE = 'STAFF';

SELECT * FROM titles
WHERE EMP_NO >= 10000 AND EMP_NO <=20000;

SELECT * FROM titles
WHERE EMP_NO BETWEEN 10500 AND 20000;


SELECT *
FROM titles
WHERE TITLE='ENGINEER' OR TITLE='STAFF';

SELECT *
FROM titles
WHERE TITLE
IN ('ENGINEER', 'STAFF', 'SENIOR STAFF');

SELECT * FROM employees
WHERE FIRST_NAME = 'G';

SELECT * FROM employees
WHERE FIRST_NAME LIKE 'G%';

SELECT * FROM employees
WHERE FIRST_NAME LIKE '%G';

SELECT * FROM employees
WHERE FIRST_NAME LIKE '%G%';

SELECT * FROM employees WHERE GENDER =
(SELECT GENDER FROM employees WHERE EMP_NO = 10066);

SELECT * FROM salaries ORDER BY SALARY;

SELECT * FROM salaries ORDER BY EMP_NO, SALARY DESC;

SELECT * FROM dept_emp
ORDER BY DEPT_NO DESC, EMP_NO;

SELECT DISTINCT DEPT_NO FROM dept_emp; 

SELECT DISTINCT EMP_NO, DEPT_NO FROM dept_emp;

SELECT * FROM salaries LIMIT 5; 

SELECT * FROM salaries ORDER BY SALARY DESC LIMIT 5;

SELECT * FROM salaries ORDER BY SALARY DESC LIMIT 5;

SELECT * FROM salaries ORDER BY SALARY DESC LIMIT 5, 5;

SELECT COUNT(*) FROM salaries;

SELECT COUNT(EMP_NO) FROM salaries;

SELECT MAX(SALARY) FROM salaries;

SELECT MIN(SALARY) FROM salaries;

SELECT SUM(SALARY) FROM salaries;

SELECT SUM(SALARY) / COUNT(SALARY) FROM salaries;

SELECT SUM(SALARY) / COUNT(SALARY) AS AVG_SALARY FROM salaries;

SELECT AVG(SALARY) FROM salaries;

SELECT COUNT(DISTINCT DEPT_NO) FROM dept_emp;

SELECT EMP_NO, MAX(SALARY), MIN(SALARY), SUM(SALARY), COUNT(SALARY) FROM SALARIES GROUP BY EMP_NO ORDER BY AVG(SALARY) DESC;

SELECT EMP_NO, MAX(SALARY), MIN(SALARY), SUM(SALARY), COUNT(SALARY), AVG(SALARY) 
FROM salaries 
GROUP BY EMP_NO 
ORDER BY COUNT(SALARY)  DESC, AVG(SALARY) DESC;

SELECT EMP_NO, MAX(SALARY), MIN(SALARY), SUM(SALARY), COUNT(SALARY), AVG(SALARY) 
FROM salaries 
GROUP BY EMP_NO 
HAVING COUNT(SALARY) = 10
ORDER BY COUNT(SALARY)  DESC, AVG(SALARY) DESC;

SELECT EMP_NO, AVG(SALARY) FROM salaries
GROUP BY EMP_NO
HAVING AVG(SALARY) >= 90000
ORDER BY AVG(SALARY);

SELECT EMP_NO, AVG(SALARY) FROM salaries
ORDER BY AVG(SALARY);

SELECT TITLE FROM titles
GROUP BY TITLE
ORDER BY COUNT(TITLE) DESC
LIMIT 1; 